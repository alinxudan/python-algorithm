class LNode:
    def __init__(self):
        self.data = None  # 数据域
        self.next = None  # 指针域

# 方法功能： 对单链表进行逆序 输入参数： head： 链表头结点
def Reverse1(head):
    # 判断链表是否为空
    if head == None or head.next == None:
        return
    pre = None  # 前驱结点
    cur = None  # 当前结点
    next = None  # 后继结点
    # 把链表首结点变为尾节点
    cur = head.next
    next = cur.next
    cur.next = None
    pre = cur
    cur = next
    # 是当前遍历到的结点cur 指向其前驱结点
    while cur.next != None:
        next = cur.next
        cur.next = pre
        pre = cur
        cur = next
    #  链表的头结点指向倒数第二个结点
    cur.next = pre
    head.next = cur

if __name__ == '__main__':
    i = 1
    # 链表头结点
    head = LNode()
    cur = head
    # 构造单链表
    while i < 8:
        tmp = LNode()
        tmp.data = i
        cur.next = tmp
        cur = tmp
        i += 1
    print('逆序前：')
    cur = head.next
    while cur != None:
        print(cur.data)
        cur = cur.next
        
    print('逆序后 Reverse：')
    Reverse1(head)
    cur = head.next
    while cur != None:
        print(cur.data)
        cur = cur.next
  
